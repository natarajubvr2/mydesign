<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_email</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_email">type=received^target_table=x_492360_mydesign_help_desk^EQ<item display_value="received" endquery="false" field="type" goto="false" newquery="false" operator="=" or="false" value="received"/>
            <item endquery="false" field="target_table" goto="false" newquery="false" operator="=" or="false" value="x_492360_mydesign_help_desk"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Requisition Email count</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

var count=0;
if(count==0){
    var gr = new GlideRecord("x_492360_mydesign_help_desk");
    gr.addQuery("sys_id", current.instance);
    gr.query();
	gs.info("email count function entered outside");
    if (gr.next()) {
		gs.info("email count function entered inside");
        var beforeResolve;
        if (gr.getValue('state') == 7 || gr.getValue('state') == 6) {

            var afterResolve = parseInt(gr.getValue("email_count_after"));
            gr.setValue('email_count_after', afterResolve + 1);

            beforeResolve = parseInt(gr.getValue("email_count_before_resolve"));
            gr.setValue('email_count_before_resolve', beforeResolve + 1);
        } else {
            beforeResolve = parseInt(gr.getValue("email_count_before_resolve"));
            gr.setValue('email_count_before_resolve', beforeResolve + 1);
        }
        gr.setValue("last_email_received_on", current.sys_created_on);
        gr.update();
		current.setAbortAction(true);
	
    }

}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-09 15:00:35</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c560e338475cca10c9a25d0f536d4364</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Requisition Email count</sys_name>
        <sys_overrides/>
        <sys_package display_value="MyDesign" source="x_492360_mydesign">8d9ca96987c825107653fd57dabb3584</sys_package>
        <sys_policy/>
        <sys_scope display_value="MyDesign">8d9ca96987c825107653fd57dabb3584</sys_scope>
        <sys_update_name>sys_script_c560e338475cca10c9a25d0f536d4364</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-12 03:32:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c560e338475cca10c9a25d0f536d4364"/>
</record_update>
